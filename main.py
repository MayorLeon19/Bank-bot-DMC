from datetime import datetime
import asyncio
import discord
import discord.ext.commands as commands
import sqlite3
import asyncio
import psutil
from discord import ui, app_commands
from discord.utils import get

global cursor, connection
token = ''
global embed_color
embed_color = 0x36393f


class PersistentViewBot(commands.Bot):
    def __init__(self) -> None:
        super().__init__(command_prefix='!', intents=discord.Intents.all())

    async def setup_hook(self):
        await bot.load_extension("cogs.shops")
        await bot.tree.sync(guild=discord.Object(id=1125004551066484767))

    async def on_command_error(self, ctx, error):
        if isinstance(error, commands.MissingPermissions):
            await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        elif isinstance(error, commands.CommandNotFound):
            await ctx.send("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")

    async def on_ready(self):
        CPU = psutil.cpu_percent()
        mem = psutil.virtual_memory()
        percentmem = int(mem.percent)
        print(
            f"\n_-_-_-_-_-_-_-_-_-_-_-_-\n\nùïØùñäùñõùñäùñëùñîùñï ùï∏ùñÜùñûùñîùñóùï∑ùñäùñîùñì\n\n-_-_-_-_-_-_-_-_-_-_-_-_\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:\n–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {CPU}%\n–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–∞–º—è—Ç–∏: {percentmem}%")
        print(f"--------\n–¢–æ–∫–µ–Ω: {token}")

        while True:
            await self.change_presence(status=discord.Status.idle, activity=discord.Activity(name=f'–∑–∞ —á–µ–±–æ–∫—Å–∞—Ä–∞–º–∏',
                                                                                             type=discord.ActivityType.watching))  # –ò–¥—ë—Ç –∏–Ω—Ñ–∞ –æ –∫–æ–º–∞–Ω–¥–µ –ø–æ–º–æ—â–∏ (–ø—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω–∏—Ç—å)
            await asyncio.sleep(15)
bot = PersistentViewBot()
@bot.hybrid_command(name='embed', description="–í—ã–≤–æ–¥–∏—Ç embed —Å–æ–æ–±—â–µ–Ω–∏–µ", with_app_command=True)
@app_commands.guilds(discord.Object(id=1125844020892012656))
async def first_command(ctx):
    await ctx.channel.send("Hello!")
bot.run(token)